name: JGUZDV.JobHost

on:
  workflow_dispatch:
    inputs:
      push-to-nuget:
        description: Push package to NuGet
        type: boolean

  pull_request:
    branches:
      - main
    paths:
      - libraries/JGUZDV.JobHost/**

jobs:
  build_shared:
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost.Shared
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build_jobhost:
    needs: build_shared
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
      run-tests: false
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build_dashboard_shared:
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost.Dashboard.Shared
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build_dashboard_efcore:
    needs: [build_dashboard_shared, build_shared, build_jobhost]
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost.Dashboard.EntityFrameworkCore
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build_dashboard_api:
    needs: [build_dashboard_shared, build_shared]
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost.Dashboard.Api
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  build_dashboard_blazor:
    needs: [build_dashboard_shared, build_shared]
    uses: ./.github/workflows/JGUZDV.JobHost.default_build.yml
    with:
      library-name: JGUZDV.JobHost.Dashboard.Blazor
      push-to-nuget: ${{ inputs.push-to-nuget != '' && inputs.push-to-nuget }}
    secrets:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  push_to_nuget:
    needs: [build_dashboard_blazor,build_dashboard_api,build_dashboard_efcore,build_dashboard_shared,build_jobhost,build_shared]
    if: github.repository == 'jguzdv/NuGet-Packages' && github.ref == 'refs/heads/main' && inputs.push-to-nuget
    name: Push ${{ inputs.library-name }}
    runs-on: ubuntu-latest

    env:
      dotnet-version: 8.0.x

    steps:
      - name: Download nupkg
        uses: actions/download-artifact@v4
        with:
          name: NuGetPackage
	  merge-multiple: true
          path: package

      - name: Push library
        run: dotnet nuget push package/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      