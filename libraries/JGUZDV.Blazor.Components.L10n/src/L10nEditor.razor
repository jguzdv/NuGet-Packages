@using System.Diagnostics.CodeAnalysis;
@using JGUZDV.L10n;
@using System.Globalization
@using Microsoft.Extensions.DependencyInjection;

@if (L10n != null)
{
    <div class="l10n-grid">
        @foreach (var lang in _languages)
        {
            <span class="input-group-text l10n-grid-language" id="@lang">@lang</span>
            <input type="text" class="form-control l10n-grid-input" aria-describedby="@lang" value="@L10n[lang]" @onchange="(e) => HandleChange(e, lang)" />
        }
    </div>
}

@code {
    [Parameter, EditorRequired]
    public L10nString L10n { get; set; } = new();

    [Parameter]
    public EventCallback<L10nString> L10nChanged { get; set; }

    [Parameter]
    public List<string>? SupportedCultures { get; set; }

    [Inject]
    public IServiceProvider ServiceProvider { get; set; } = default!;

    private List<string> _languages = new();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (SupportedCultures != null)
        {
            _languages = SupportedCultures;
        }
        else
        {
            try
            {
                var service = ServiceProvider.GetRequiredService<ISupportedCultureService>();
                _languages = service.GetSupportedCultures();
            }
            catch (Exception)
            {
                throw new Exception("Neither the Parameter for the L10nEditor was found nor the Service was used.");
            }
        }
    }

    private void HandleChange(ChangeEventArgs e, string language)
    {
        L10n[language] = e.Value as string;
        L10nChanged.InvokeAsync(L10n);
    }
}