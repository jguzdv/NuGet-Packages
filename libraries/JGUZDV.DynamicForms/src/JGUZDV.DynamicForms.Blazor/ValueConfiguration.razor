@using JGUZDV.Blazor.Components.Modals
@using JGUZDV.DynamicForms.Blazor.Constraints
@using JGUZDV.DynamicForms.Model

<div class="small pb-1"><i class="fas fa-info-circle"></i> @SL["Info"]</div>

<div class="d-flex btn-group pb-3" role="group">
    <button type="button"
            class="col-6 btn @(!_isChoiceOptionMode ? "btn-primary" : "btn-outline-primary")"
            disabled="@(!_isChoiceOptionMode)"
            @onclick="HandleValueSwitch">
        @SL["Werte einschränken"]
    </button>
    <button type="button"
            class="col-6 btn @(_isChoiceOptionMode ? "btn-primary" : "btn-outline-primary")"
            disabled="@(_isChoiceOptionMode)"
            @onclick="HandleValueSwitch">
        @SL["Werte vorgeben"]
    </button>
</div>

@if (!_isChoiceOptionMode)
{
    <h3 class="h5">@SL["Einschränkung hinzufügen"]</h3>
    <EditConstraints @bind-FieldDefinition="FieldDefinition"
                     @bind-FieldDefinition:after="() => FieldDefinitionChanged.InvokeAsync(FieldDefinition)">
    </EditConstraints>
}
else
{
    <EditChoiceOptions @bind-Field="FieldDefinition"
                       @bind-Field:after="() => FieldDefinitionChanged.InvokeAsync(FieldDefinition)">
    </EditChoiceOptions>
}

<ModalConfirmation @ref="@_confirmationModal"
                   AcceptText="Yes"
                   DenyText="No"></ModalConfirmation>

@code {
    private bool _isChoiceOptionMode = true;

    private ModalConfirmation? _confirmationModal;

    [Parameter]
    public FieldDefinition FieldDefinition { get; set; }

    [Parameter]
    public EventCallback<FieldDefinition> FieldDefinitionChanged { get; set; }

    [Inject]
    public IStringLocalizer<Resources.ComponentStrings> SL { get; set; }

    protected override void OnParametersSet()
    {
        if (FieldDefinition.ChoiceOptions.Any())
        {
            _isChoiceOptionMode = true;
        }
        else if (FieldDefinition.Constraints.Any())
        {
            _isChoiceOptionMode = false;
        }
    }


    private async Task HandleValueSwitch()
    {
        var modal = await _confirmationModal!.ShowModal("u Sure about that");//todo

        if (modal != ModalResult.Accepted)
            return;

        if (_isChoiceOptionMode)
        {
            FieldDefinition.ChoiceOptions.Clear();
        }
        else
        {
            FieldDefinition.Constraints.Clear();
        }

        _isChoiceOptionMode = !_isChoiceOptionMode;
    }
}
