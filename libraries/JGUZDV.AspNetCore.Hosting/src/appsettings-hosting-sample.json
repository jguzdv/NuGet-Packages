{
  // This file is showing all the possible configuration options. You should only include the ones you need.

  // Allows pointing to a common configuration file for all applications on the machine.
  // It's not recommended to have this in development. It's best used via a machine-wide environment variable.
  "MachineConfig": "C:\\MachineConfig.json",

  "Logging": {
    "LogLevel": {
      // For Production this should be set to "Warning"
      "Default": "Warning"
    },

    "EventLog": {
      "LogLevel": {
        // Prefer error here, since it spams the event log otherwise
        "Default": "Error"
      }
    },

    // This is the configuration for the OpenTelemetry logging provider. It's not required, but it's useful to have to get logs from the application to a central location.
    "OpenTelemetry": {
      "LogLevel": {
        "Default": "Warning"
      }
    },

    // Generally you should not include this section, since it will be provided on the production machines automatically (e.g. environment variables or MachineConfig)
    "File": {
      "LogLevel": {
        "Default": "Warning"
      },

      "OutputDirectory": "C:\\Logs"
    }
  },


  // Locally managed Features (this uses Microsoft.FeatureManagement, so there's more that can be done)
  // User specific feature flags will automatically be exposed via the /_app/feature endpoint
  "Features": {
    "Feature-1": true, // simple boolean to enable a feature
    "Feature-2": false, // simple boolean to disable a feature
    "Feature-3": { "EnabledFor": [ { "Name": "AuthenticatedUser" } ] }, // feature enabled for authenticated users only
    "Feature-4": { // feature enabled for users with a specific claim
      "EnabledFor": [
        {
          "Name": "ClaimRequirement",
          "Parameters": {
            "ClaimType": "role",
            "ClaimValue": "zdv-dev"
          }
        }
      ]
    }
  },

  // Alteratively - Remotely managed Features
  "Features": "https://localhost:5001/_app/feature",


  // DataProtection configuration
  "JGUZDV": {
    "DataProtection": {
      // This is the application discriminator, it's used to separate keys between applications on the same machine
      // /!\ REQUIRED /!\
      "ApplcationDiscriminator": "MyApp",

      // Generally you should not include the following sections, since they will be provided on the production machines automatically (e.g. environment variables or MachineConfig)
      "Persistence": { // must be defined
        "FileSystem": { // must be defined
          "Path": "/my-dataprot-path/", // path for file system persistence
          "IsolatedPathDiscriminator": true // if not set, IHostingEnvironment.ApplicationName will be used as default
        }
      },

      "UseProtection": true, // if true, protect keys, default: true
      "Protection": { // must be defined if UseProtection is true
        "UseDpapiNG": false // if true, use Windows Server DpapiNG
      }
    }
  },


  // Distribured Cache configuration - use dotnet sql-cache to create the table
  "DistributedCache": {
    "ConnectionString": "localhost:6379", // Connection string for a sql server cache
    "SchemaName": "dbo",
    "TableName": "Cache"
  }
}
