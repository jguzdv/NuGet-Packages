@using JGUZDV.AspNetCore.Components.Localization
@inject ILanguageService LS
@inject IStringLocalizer<ComponentStrings> LR
@inject NavigationManager _navigation

@code {
    [Inject, NotNull]
    private NavigationManager? Navigation { get; set; }

    [Parameter]
    public string LanguageSelectionEndpointFormat { get; set; } = "_app/localization/{0}";
}

@if (LS.GetLanguages()?.Any() == true) {
    <Dropdown>
        <DropdownLabelContent>
            <span class="btn btn-none" aria-haspopup="true" aria-expanded="false" aria-label="@LR["LanguagePicker.Header"]">
                @Icons.LanguageSelect(null)
            </span>
        </DropdownLabelContent>
        <DropdownContent>
            @{
                var returnUrl = Uri.EscapeDataString(Navigation.ToAbsoluteUri(Navigation.Uri).PathAndQuery);
            }

            <h6 class="dropdown-header">@LR["LanguagePicker.Header"]</h6>

            @foreach (var l in LS.GetLanguages() ?? [])
            {
                var isSelected = l.Culture == LS.GetCurrentUICulture();
                var href = string.Format(LanguageSelectionEndpointFormat, l.Culture) + "?returnUrl=" + returnUrl;

                <a class="dropdown-item @(isSelected?"active":null)" href="@href">@l.DisplayName</a>
            }
        </DropdownContent>
    </Dropdown>
}
