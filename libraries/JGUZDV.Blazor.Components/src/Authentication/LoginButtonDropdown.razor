@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@inject IStringLocalizer<Resources.ComponentStrings> LR

@code{
    [Parameter]
    public string? Username { get; set; }
    public bool HasUserName => !string.IsNullOrWhiteSpace(Username);

    public string? UserInitials =>
        HasUserName ? string.Join("", Username!.Where(x => char.IsUpper(x)).Take(2)) : null;

    [Parameter, EditorRequired]
    public string? LogoutUrl { get; set; }

    [Parameter]
    public RenderFragment? DropdownItems { get; set; }

    [Parameter]
    public bool AlignLeft { get; set; }

    public bool IsLogoutDropdownVisible { get; set; }
    public void ToggleDropdown()
    {
        IsLogoutDropdownVisible = !IsLogoutDropdownVisible;
    }
}

<Dropdown>
    <DropdownLabelContent>
        <span class="jgu_btn btn @(HasUserName?"btn-light border":"btn-none") d-none d-lg-inline-block">
            <i class="fas fa-user-circle"></i>
            @if (HasUserName)
            {
                <span class="ms-2">@Username</span>
            }
        </span>
        <span class="jgu_btn btn @(HasUserName?"btn-light border":"btn-none") d-lg-none d-inline-block">
            @if (HasUserName)
            {
                <span>@UserInitials</span>
            }
            else
            {
                <i class="fas fa-user-circle"></i>
            }
        </span>
    </DropdownLabelContent>
    <DropdownContent>
        <a class="dropdown-item" href="@LogoutUrl">
            <i class="fas fa-sign-out-alt"></i>
            @LR["AuthView.LogoutButton"]
        </a>
        @DropdownItems
    </DropdownContent>
</Dropdown>